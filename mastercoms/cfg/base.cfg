// general graphics
mat_queue_mode 2 // force multithreaded material system
cl_threaded_client_leaf_system 1 // parallel process things in the leaf
r_threaded_renderables 1 // thread renderables, possible crash points but it seems good
lod_TransitionDist -5000 // fade fake LOD objects at the best range possible
cl_jiggle_bone_framerate_cutoff 66 // don't do jigglebones if we're not hitting optimal frames
cl_muzzleflash_dlight_1st 0 // don't draw muzzleflashes in firstperson, it's distracting
cl_drawmonitors 0 // don't render monitors
cl_ejectbrass 0 // don't render shell ejection from minigun and pistol
cl_fasttempentcollision 15 // collide temp ents (syringes) every 15 frames
r_spray_lifetime 1 // freshen up the walls every round
r_dopixelvisibility 0 // don't try pixelvis (high impact visibility testing)
r_drawpixelvisibility 0 // don't use pixelvis in rendering
r_pixelvisibility_partial 0 // don't use a costly precise pixelvis algorithm
r_norefresh 1 // don't store a useless frame time variable
r_occludermincount 1 // force using occluders
fast_fogvolume 1 // optimize fog
r_fastzreject 1 // autodetect is broken for fast z rejects, so make it available
                // if it's not supported, it just won't be used
flex_smooth 0 // don't smooth face animations
engine_no_focus_sleep 0 // sleep the engine quickly when there is no focus
fps_max 240 // without an fps cap, there are CPU usage problems and memory leaks
cl_SetupAllBones 1 // TF2 still has a problem where it forgets to set up some bones
                   // which causes all sorts of issues when other bones depend 
                   // on unsetup bones and when bones just aren't setup by themselves
anim_3wayblend 0 // don't do complex animation blending
mat_software_aa_strength 0 // don't do software based AA
mat_software_aa_strength_vgui 0 // don't do software based AA on the HUD
mat_software_aa_blur_one_pixel_lines 0 // don't do software based AA
mat_forcemanagedtextureintohardware 0 // don't do this useless texture memory management thing
mat_forcehardwaresync 0 // don't try to sync to hardware
ai_expression_optimization 1 // do a more aggressive view check for facial expressions
ai_expression_frametime 0.015 // optimize facial expressions based on view if fps < 66
r_drawtracers_firstperson 0 // don't draw distracting first person bullet lines
tracer_extra 0 // don't add extra fluff to bullet lines

// misc
bugreporter_uploadasync 1 // upload files using the bug reporter asynchronously

// memory
datacachesize 378 // use a good amount of memory for the data cache
mem_max_heapsize 768 // allow for more memory usage to utilize modern computer capabilities
mem_max_heapsize_dedicated 96 // allocate a bit more space on low memory systems
                              // (256MB to 512MB)
mem_min_heapsize 512 // 1/4 of this value is used for an audio cache, that's why
                     // it should be increased, if it were not for that, we could
                     // trust the engine to manage the necessary memory as needed
lzma_persistent_buffer 1 // allocate a permanent buffer for lzma compression
                         // so a new buffer doesn't have to made every time
                         // at the cost of a bit of extra memory usage
mod_forcedata 1 // load all model data into data cache to prevent stutters

// shadows
cl_blobbyshadows 1 // don't render shadows twice
nb_shadow_dist 400 // don't render shadows far away
r_flashlightdepthres 64 // don't waste memory and rendering for shadows
r_flashlightmodels 0 // disable shading/lighting useless performance hit
r_flashlightrender 0 // disable shading/lighting useless performance hit
r_shadowmaxrendered 17 // don't render more shadows than needed
r_threaded_client_shadow_manager 1 // thread shadows, may not work anymore with latest Source

// lighting
r_ambientmin 0.35 // tweak lighting a bit to be realistic, no performance impact
r_lightaverage 0 // don't do this inefficient high cost lighting job that is barely noticeable
r_rimlight 0 // disable that weird light around model edges, better perf and better looks
r_maxdlights 16 // reduce maximum dynamic lights that can be active in a frame
                // TF2 won't hit this limit often
r_worldlightmin 0.0008 // don't render insignificant lighting
r_worldlights 2 // max lights applied to a vertex. 2 is a boost from the default 4
                // and isn't a noticeable drop in quality

// bloom
r_bloomtintb 0.11 // adjust bloom blue tint
r_bloomtintexponent 2 // adjust bloom intensity
r_bloomtintg 0.59 // adjust bloom green tint
r_bloomtintr 0.3 // adjust bloom red tint

// water
r_cheapwaterend 800 // render fully cheap water when water is far away enough
r_cheapwaterstart 250 // render partly cheap water when you're not close to water

// particles
cl_particle_batch_mode 2 // batch particles with best mode
mat_reduceparticles 1 // reduce particles, but it only helps a little bit because
                      // the real performance impact comes from creating particle system
particle_sim_alt_cores 4 // if the thread pool is not available, use this many cores
                         // for particle jobs
r_drawflecks 0 // don't create particle systems when things hit surfaces, perf and distracting
tf_particles_disable_weather 1 // don't create weather particle systems

// decals
r_decal_cover_count 2 // if decals are almost fully covered by this many decals, remove them
r_decal_cullsize 20 // if decals are smaller than this on screen in pixels, don't render them
r_decal_overlap_area 0.5 // if decals are covered by other decals this much or more, remove them
r_decal_overlap_count 0 // all the other decal rules are fine. don't do this heavy impact check.
r_decals 9 // good for seeing spread on scattergun or shotgun, we don't need more
mp_decals 9 // force the decal limit in multiplayer too (must be the same as r_decals)
r_decalstaticprops 0 // don't use ambient lighting for props, it's heavy and does pratically nothing
r_drawmodeldecals 0 // blood decals on bodies, hurts performance
r_maxmodeldecal 10 // optimized model decal count if you happen to enable it
r_overlayfadeenable 0 // fading overlays causes performance issues
                      // maps can already have their own fading rules
r_overlayfademax 1000 // optimize overlay fades if you happen to enable it
r_overlayfademin 745 // optimize overlay fades if you happen to enable it
r_renderoverlayfragment 1 // render overlays, pretty minor impact
r_queued_decals 1 // use threaded material system for decals

// props
cl_phys_props_max 15 // don't have that many props, TF2 doesn't need that much
r_drawdetailprops 0 // don't draw grass and other detail props
cl_phys_props_respawndist 1000 // respawn props when we can see them
cl_phys_props_respawnrate 90 // respawn props slightly slower
cl_detaildist 1000 // don't draw detail props from a reasonable distance to stop
cl_detailfade 1000 // don't fade props, it's useless to do so
r_propsmaxdist 1000 // don't draw props from a reasonable distance to stop
r_staticprop_lod 2 // props don't need to be highly detailed anyway
props_break_max_pieces 6 // slightly decrease gib pieces and props

// ragdolls
cl_ragdoll_fade_time 1 // how long for the ragdoll fade
cl_ragdoll_forcefade 1 // fade ragdolls quickly, ignoring rules
cl_ragdoll_physics_enable 0 // disable ragdoll physics, which are heavy on perf
g_ragdoll_fadespeed 10000 // fade ragdolls faster, idle ragdolls are just a waste
g_ragdoll_maxcount 4 // ragdolls are expensive, so don't have a lot
ragdoll_sleepaftertime 1 // ragdolls are irrelevant once they've settled
phys_pushscale 0.75 // calm the ragdoll physics down a bit

// sound
dsp_slow_cpu 1 // don't do useless DSP effects
dsp_facingaway 30 // enhance facing away effect
dsp_enhance_stereo 0 // enhance positional audio
dsp_player 0 // don't distort sound from loud noises
dsp_water 0 // don't distort sound underwater
snd_async_fullyasync 1 // play sounds independently of main engine work
snd_async_minsize 256000 // wait until 256K of audio file has been loaded
snd_disable_mixer_duck 1 // disable ducking, which ruins positional audio
snd_mix_async 1 // have the sound mixer run asynchronously
snd_mixahead 0.08 // keep sounds for 80 millis and mix them
snd_noextraupdate 1 // don't update sounds twice
snd_spatialize_roundrobin 3 // spatialize sound every 8 frames
phonemedelay 0.1 // sounds are delayed for 0.08 + 0.02 seconds
phonemesnap 1 // don't render extra phonemes on even higher LODs
voice_buffer_ms 0.1 // buffer voice stream for better quality, at a slight delay
voice_overdrive 1.25 // decreases other sounds by 20% when voice comms are played
voice_overdrivefadetime 0.25 // fades sounds quicker in and out when voice is played
voice_steal 2 // reuse unimportant sound channels, increases perf and quality

// filesystem
filesystem_buffer_size 32768 // keep files up to 32KB away in buffer
filesystem_max_stdio_read 32 // read more files
filesystem_native 1 // use native IO, which is faster
filesystem_unbuffered_io 0 // buffer IO, which decreases disk reads, faster
mod_load_anims_async 1 // load animations async
mod_load_mesh_async 1 // load meshes async
mod_load_vcollide_async 1 // load vcollides async

// backpack
cl_showbackpackrarities 0 // see backpack-tweaks.cfg
tf_item_selection_panel_sort_type 0 // see backpack-tweaks.cfg
tf_backpack_page_button_delay 0.25 // decrease button delay for moving items
tf_time_loading_item_panels 0.0003 // time spent per frame for loading item panels

// ropes
r_ropetranslucent 1 // see ropes-disable.cfg

// network
cl_cmdrate 66 // send our input as fast as the server allows
cl_updaterate 66 // get the latest info from the server
cl_interp_ratio 1 // decrease time between updates
cl_interp 0.01 // force using cl_interp_ratio
cl_smoothtime 0.06 // smooth for for how long about 3 to 4 packets would take
rate 189001 // scaled rate for how many packets we are sending 
net_maxcleartime 0.5 // max seconds we can wait for packets (500 ping)
net_maxpacketdrop 330 // how behind can a packet be before it's considered late 
net_splitpacket_maxrate 189001 // allow for split packets at the higher rate
net_splitrate 4 // split packets to allow for fully split packets per frame
net_compresspackets 0 // fast networks no longer need network compression
cl_timeout 60 // set timeout delay to be longer to give more grace to players
net_queued_packet_thread 1 // sending every packet on another thread is heavy to most CPUs
net_maxfilesize 64 // don't limit file upload size

